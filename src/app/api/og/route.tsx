import { ImageResponse } from "next/og"

import { domain } from "@/lib/domain"

// Cache fonts in memory to avoid reloading on every request
const fontCache = new Map<string, ArrayBuffer>()

const loadGoogleFont = async (font: string, text: string, weights: string) => {
  const cacheKey = `${font}-${weights}`

  // Check cache first
  if (fontCache.has(cacheKey)) {
    return fontCache.get(cacheKey)!
  }

  const url = `https://fonts.googleapis.com/css2?family=${font}:wght@${weights}&text=${encodeURIComponent(text)}`
  const css = await (await fetch(url)).text()
  const resource = css.match(/src: url\((.+)\) format\('(opentype|truetype)'\)/)

  if (resource) {
    const response = await fetch(resource[1])
    if (response.status === 200) {
      const fontData = await response.arrayBuffer()
      // Cache the font data
      fontCache.set(cacheKey, fontData)
      return fontData
    }
  }

  throw new Error("failed to load font data")
}

export async function GET(request: Request) {
  const { searchParams } = new URL(request.url)
  const title = searchParams.get("title")
  const description =
    searchParams.get("description") ||
    "Beautiful React components with smooth animations"

  const text = `Ottoui ${title} ${description}`

  // Load fonts in parallel
  const [interFont, asapFont] = await Promise.all([
    loadGoogleFont("Inter", text, "400"),
    loadGoogleFont("Asap", text, "600"),
  ])

  return new ImageResponse(
    (
      <div tw="bg-[#171717] relative flex flex-col justify-between w-full h-full">
        <div
          style={{
            backgroundImage: `url(${domain}/dynamic-og.png)`,
            backgroundSize: "cover",
            backgroundPosition: "center",
          }}
          tw="flex absolute left-0 top-0 w-full h-full "
        />

        <div
          tw="flex top-12 left-12 z-10 "
          style={{
            gap: "8px",
            alignItems: "center",
          }}
        >
          {/* biome-ignore lint/a11y/noSvgWithoutTitle: "satori" */}
          <svg
            width={37}
            height={48}
            viewBox="0 0 37 48"
            fill="none"
            style={{
              marginTop: "-8px",
            }}
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clip-path="url(#clip0_103_13)">
              <path
                d="M27.9087 0.0107449C28.3504 -0.0312465 28.8017 0.0552626 29.2247 0.17598C30.4565 0.527411 31.677 1.01349 32.8802 1.45034C33.7745 1.77493 34.9039 2.09489 35.7121 2.57891C36.1148 2.82014 36.4626 3.11729 36.6897 3.53161C36.9914 4.08221 37.048 4.70853 36.8621 5.30474C36.4965 6.4775 36.0161 7.59502 34.8607 8.18884C33.8348 8.71609 32.8857 8.40542 31.8572 8.06723C31.3815 7.90999 30.9046 7.75657 30.4264 7.6071C30.0091 8.56499 29.6037 9.52799 29.2105 10.4958C28.9229 11.1853 28.609 11.8749 28.3645 12.5801C28.5367 12.6292 28.7077 12.6822 28.8776 12.739C30.2443 13.1967 31.2003 13.9951 31.8402 15.2758C32.3295 15.3659 32.7447 15.5362 33.0838 15.9119C33.4907 16.3629 33.6552 16.9681 33.625 17.5629C33.5949 18.1556 33.4785 18.7619 33.3902 19.3498C33.1232 21.1296 32.9588 21.7998 31.5778 23.0357C31.4158 23.6337 31.394 24.3009 31.3251 24.9175C31.2242 25.7868 31.1141 26.6552 30.995 27.5223L29.6725 37.9783C29.4949 39.322 29.3404 40.6659 29.1143 42.0032C28.8575 43.521 28.146 44.7717 26.8588 45.6689C26.0114 46.2596 25.0207 46.663 24.0391 46.982C20.4204 48.158 16.347 48.2805 12.6092 47.6476C10.7699 47.3477 8.51671 46.7838 6.96071 45.7411C6.0199 45.1208 5.29702 44.2268 4.89196 43.1827C4.64062 42.5166 4.58056 41.7865 4.47702 41.0872L4.10626 38.5544C3.61076 35.1666 3.1406 31.7751 2.69577 28.3804L2.28559 24.9494C2.21277 24.3177 2.16741 23.6685 2.0491 23.0437C1.89495 22.902 1.74178 22.7593 1.58957 22.6157C0.524434 21.5954 0.387617 20.4278 0.186672 19.0442C0.112879 18.5364 0.00415637 18.0081 8.36111e-05 17.4956C-0.00481751 16.8833 0.205655 16.2127 0.65711 15.778C1.03753 15.4116 1.501 15.3075 2.01438 15.3134C2.86503 13.1416 4.62336 11.5921 6.87366 10.9137C7.79604 10.6357 8.45707 10.6121 9.3733 10.1564C10.4011 9.64509 11.1628 8.75542 12.0865 8.09536C13.717 6.93019 15.5397 6.47839 17.5292 6.80954C19.437 7.11468 21.1386 8.17047 22.2468 9.73645C22.589 9.09299 22.833 8.36766 23.1179 7.69587L24.9295 3.41629C25.2198 2.72428 25.5276 1.76107 25.9697 1.17333C26.4581 0.523928 27.1019 0.130916 27.9087 0.0107449Z"
                fill="#171717"
              />
              <path
                d="M4.43121 24.0905C4.89848 24.1488 5.3694 24.2965 5.83556 24.3809C6.66599 24.5312 7.51968 24.6306 8.35894 24.721C11.895 25.074 15.4502 25.2024 19.0029 25.1054C22.4294 25.0228 25.8064 24.8012 29.1652 24.0857C29.1323 24.4942 29.0579 24.9063 29.0019 25.3129L28.6816 27.6527L27.7906 34.5152C27.5601 36.3419 27.3736 38.1739 27.135 39.9994C27.0311 40.7943 26.9675 41.6449 26.77 42.4212C26.6887 42.6206 26.5914 42.8013 26.4599 42.9724C25.1422 44.6879 21.9077 45.2487 19.8514 45.5304C18.7933 45.6829 17.7251 45.7564 16.6558 45.7503C14.2685 45.7184 9.86828 45.1057 7.94891 43.653C7.52279 43.3305 7.12793 42.9326 6.96281 42.416C6.80957 41.9365 6.77982 41.3768 6.70996 40.8792L6.28957 37.8952L4.43121 24.0905Z"
                fill="#171717"
              />
              <path
                d="M20.7924 34.7629C21.0252 34.776 21.2312 34.8134 21.4198 34.9589C21.6467 35.1339 21.7773 35.4417 21.8079 35.7192C21.8478 36.0824 21.6872 36.3857 21.4582 36.6573C20.4908 37.8045 19.0917 38.4552 17.6 38.5828C15.9157 38.7269 13.9978 38.262 12.6954 37.1702C12.3539 36.8483 11.949 36.4768 11.8504 36.001C11.796 35.7383 11.8364 35.4532 11.9918 35.2301C12.1579 34.9914 12.4313 34.8354 12.7186 34.7911C13.4196 34.6833 13.7918 35.3781 14.2925 35.7304C15.5803 36.6366 17.7606 36.8081 19.1096 35.942C19.6777 35.5772 20.1028 34.8795 20.7924 34.7629Z"
                fill="white"
              />
              <path
                d="M21.2411 27.6613C21.6992 27.6215 22.1167 27.7099 22.5101 27.9501C23.0617 28.287 23.423 28.8953 23.5651 29.5099C23.7358 30.2341 23.6076 30.9957 23.209 31.6261C22.8623 32.1645 22.3789 32.4619 21.7586 32.6026C21.3029 32.6884 20.774 32.5325 20.3906 32.2854C19.8385 31.9296 19.4897 31.3353 19.3631 30.7032C19.2219 29.9976 19.3519 29.2207 19.7603 28.6196C20.1186 28.0924 20.6154 27.7824 21.2411 27.6613Z"
                fill="white"
              />
              <path
                d="M12.0155 27.6586C12.4503 27.6261 12.8653 27.7155 13.2372 27.9463C13.8022 28.297 14.1446 28.8882 14.2905 29.5208C14.4524 30.2236 14.3418 30.9827 13.9494 31.5948C13.5946 32.1483 13.1166 32.4487 12.4764 32.5938C11.9994 32.6732 11.5305 32.558 11.1263 32.2979C10.5639 31.9359 10.2089 31.3074 10.082 30.6666C9.94221 29.9558 10.0914 29.2191 10.4974 28.6165C10.8684 28.0729 11.3727 27.7826 12.0155 27.6586Z"
                fill="white"
              />
              <path
                d="M15.9845 8.99196C16.5509 8.94178 17.1447 9.03095 17.686 9.19796C19.8901 9.87802 20.5119 11.7287 22.2614 13.0118C23.6944 14.0629 25.1153 14.3035 26.8125 14.6126C27.3807 14.7161 27.9625 14.8194 28.4943 15.0501C29.102 15.3136 29.3056 15.6115 29.5433 16.209C26.1145 17.2245 21.4335 17.3464 17.8454 17.3696C13.6804 17.461 8.24637 17.3032 4.23767 16.228C4.40562 15.7243 4.65337 15.1786 4.99168 14.7652C5.5881 14.0362 6.56411 13.4604 7.46599 13.1946C7.9688 13.0464 8.49171 12.9676 8.99618 12.8219C9.53937 12.6645 10.0652 12.4533 10.5656 12.1915C11.031 11.9465 11.4837 11.6715 11.8893 11.3371C13.3936 10.0971 13.7924 9.21394 15.9845 8.99196Z"
                fill="white"
              />
              <path
                d="M2.32362 17.9395C2.65351 18.0694 2.97664 18.2163 3.31571 18.322C4.5071 18.6937 5.88521 18.9045 7.11947 19.0859C9.3706 19.4191 11.6408 19.6118 13.9164 19.6627C14.9267 19.6875 15.9409 19.6687 16.9516 19.6682C19.7987 19.667 22.5968 19.6216 25.426 19.2691C26.9812 19.0753 28.5969 18.8358 30.1089 18.4198C30.4819 18.3172 30.8381 18.1579 31.2083 18.0449C31.2562 18.0854 31.2456 18.0643 31.2609 18.1234C31.3416 18.4355 31.1008 19.8224 30.9857 20.1835C30.9267 20.3688 30.8414 20.5279 30.7387 20.6921C30.548 20.9322 30.3176 21.1386 30.0573 21.3026C27.9048 22.6715 19.7742 22.8253 16.9409 22.8336C14.8396 22.8303 12.7388 22.7654 10.6413 22.6389C8.95159 22.5268 7.19768 22.3666 5.544 21.998C4.59456 21.7864 3.41436 21.4727 2.86647 20.5982C2.75077 20.4136 2.67139 20.2146 2.61465 20.0054C2.50972 19.6182 2.49184 19.2028 2.42972 18.807C2.39424 18.5811 2.30229 18.3383 2.29732 18.1107C2.29608 18.0516 2.31016 17.9965 2.32362 17.9395Z"
                fill="#171717"
              />
              <path
                d="M28.4593 2.33032C28.5637 2.34698 28.6663 2.373 28.766 2.40796C29.9196 2.80145 31.0615 3.2456 32.2061 3.66463C32.8083 3.88503 33.5361 4.08686 34.1012 4.37555C34.2589 4.45605 34.4185 4.59977 34.4917 4.76207C34.5988 4.99968 34.4898 5.26112 34.3945 5.48535C34.2617 5.79807 34.0434 6.06729 33.6901 6.13045C32.7858 6.29227 29.9558 4.61282 29.2269 4.93769C29.0937 4.99709 29.0032 5.08858 28.9235 5.208C28.6866 5.56319 28.5441 6.01622 28.3839 6.41032L27.6515 8.20182C27.3517 8.99905 27.0082 9.78541 26.6871 10.5749C26.4828 11.0774 26.303 11.6388 26.0385 12.1119C25.3864 11.992 24.6478 11.8392 24.0675 11.5105L26.568 5.42718L27.2102 3.82829C27.3472 3.48662 27.4701 3.09716 27.6762 2.7897C27.8809 2.48422 28.1101 2.39328 28.4593 2.33032Z"
                fill="#171717"
              />
            </g>
            <defs>
              <clipPath id="clip0_103_13">
                <rect width="37" height="48" fill="white" />
              </clipPath>
            </defs>
          </svg>
          <p
            tw="text-center text-4xl font-bold uppercase text-[#171717]"
            style={{ fontFamily: "Asap" }}
          >
            Smooth<span style={{ color: "#fe65b0" }}>UI</span>
          </p>
        </div>

        <div
          style={{ fontFamily: "Inter" }}
          tw="flex flex-col bottom-0 left-0 right-0 relative z-10 p-12 text-[#171717]"
        >
          <h1 style={{ fontFamily: "Inter" }} tw="my-4 text-6xl font-bold ">
            {title || "Component"}
          </h1>
          <p tw="text-xl m-0  w-[60%]">{description}</p>
        </div>
      </div>
    ),
    {
      width: 1200,
      height: 630,
      fonts: [
        {
          name: "Inter ",
          data: interFont,
          style: "normal",
        },
        {
          name: "Asap",
          data: asapFont,
          style: "normal",
        },
      ],
    }
  )
}

// Add caching headers and revalidation
export const runtime = "edge"
export const revalidate = 3600 // Cache for 1 hour
