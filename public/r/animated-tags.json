{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "animated-tags",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "files": [
    {
      "path": "ottoui/AnimatedTags.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { CircleX, Plus } from \"lucide-react\"\nimport { AnimatePresence, motion } from \"motion/react\"\n\nexport interface AnimatedTagsProps {\n  initialTags?: string[]\n  selectedTags?: string[]\n  onChange?: (selected: string[]) => void\n  className?: string\n}\n\nexport default function AnimatedTags({\n  initialTags = [\"react\", \"tailwindcss\", \"javascript\"],\n  selectedTags: controlledSelectedTags,\n  onChange,\n  className = \"\",\n}: AnimatedTagsProps) {\n  const [internalSelected, setInternalSelected] = useState<string[]>([])\n  const [internalTags, setInternalTags] = useState<string[]>(initialTags)\n\n  const selectedTag = controlledSelectedTags ?? internalSelected\n  const tags = initialTags.filter((tag) => !selectedTag.includes(tag))\n\n  const handleTagClick = (tag: string) => {\n    const newSelected = [...selectedTag, tag]\n    if (onChange) {\n      onChange(newSelected)\n    } else {\n      setInternalSelected(newSelected)\n    }\n  }\n  const handleDeleteTag = (tag: string) => {\n    const newSelectedTag = selectedTag.filter((selected) => selected !== tag)\n    if (onChange) {\n      onChange(newSelectedTag)\n    } else {\n      setInternalSelected(newSelectedTag)\n    }\n  }\n  return (\n    <div className={`flex w-[300px] flex-col gap-4 p-4 ${className}`}>\n      <div className=\"flex flex-col items-start justify-center gap-1\">\n        <p>Selected Tags</p>\n        <AnimatePresence>\n          <div className=\"bg-background flex min-h-12 w-full flex-wrap items-center gap-1 rounded-xl border p-2\">\n            {selectedTag?.map((tag) => (\n              <motion.div\n                key={tag}\n                layout\n                className=\"group bg-primary text-primary-foreground group-hover:bg-primary group-hover:text-foreground flex cursor-pointer flex-row items-center justify-center gap-2 rounded-md border px-2 py-1\"\n                onClick={() => handleDeleteTag(tag)}\n                initial={{ y: 20, opacity: 0, filter: \"blur(4px)\" }}\n                animate={{\n                  y: 0,\n                  opacity: 1,\n                  filter: \"blur(0px)\",\n                }}\n                exit={{ y: 20, opacity: 0, filter: \"blur(4px)\" }}\n                transition={{ duration: 0.3, bounce: 0, type: \"spring\" }}\n              >\n                {tag}{\" \"}\n                <CircleX\n                  size={16}\n                  className=\"flex items-center justify-center rounded-full transition-all duration-300 ease-in-out\"\n                />\n              </motion.div>\n            ))}\n          </div>\n        </AnimatePresence>\n      </div>\n      <AnimatePresence>\n        <div className=\"flex flex-wrap items-center gap-1\">\n          {tags.map((tag, index) => (\n            <motion.div\n              layout\n              key={index}\n              className=\"group bg-background text-primary-foreground flex cursor-pointer flex-row items-center justify-center gap-2 rounded-md border px-2 py-1\"\n              onClick={() => handleTagClick(tag)}\n              initial={{ y: -20, opacity: 0, filter: \"blur(4px)\" }}\n              animate={{\n                y: 0,\n                opacity: 1,\n                filter: \"blur(0px)\",\n              }}\n              exit={{ y: -20, opacity: 0, filter: \"blur(4px)\" }}\n              transition={{ duration: 0.3, bounce: 0, type: \"spring\" }}\n            >\n              {tag}{\" \"}\n              <Plus\n                size={16}\n                className=\"hover:bg-primary group-hover:text-foreground flex items-center justify-center rounded-full transition-all duration-300 ease-in-out\"\n              />\n            </motion.div>\n          ))}\n        </div>\n      </AnimatePresence>\n    </div>\n  )\n}\n",
      "type": "registry:ui",
      "target": "components/ottoui/ui/AnimatedTags.tsx"
    }
  ]
}