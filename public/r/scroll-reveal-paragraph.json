{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-reveal-paragraph",
  "type": "registry:ui",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "ottoui/ScrollRevealParagraph.tsx",
      "content": "\"use client\"\n\nimport { useRef } from \"react\"\nimport { motion, useScroll, useTransform, type MotionValue } from \"motion/react\"\n\ninterface ScrollRevealParagraphProps {\n  paragraph: string\n  className?: string\n}\n\nexport default function ScrollRevealParagraph({\n  paragraph,\n  className = \"\",\n}: ScrollRevealParagraphProps) {\n  const container = useRef<HTMLParagraphElement>(null)\n  const { scrollYProgress } = useScroll({\n    target: container,\n    offset: [\"start 0.9\", \"start 0.25\"],\n  })\n\n  const words = paragraph.split(\" \")\n\n  return (\n    <p ref={container} className={`text-lg leading-relaxed ${className}`}>\n      {words.map((word, i) => {\n        const start = i / words.length\n        const end = start + 1 / words.length\n        return (\n          <Word\n            key={`word-${i}-${word.slice(0, 3)}`}\n            progress={scrollYProgress}\n            range={[start, end]}\n          >\n            {word}\n          </Word>\n        )\n      })}\n    </p>\n  )\n}\n\ninterface WordProps {\n  children: string\n  progress: MotionValue<number>\n  range: [number, number]\n}\n\nconst Word = ({ children, progress, range }: WordProps) => {\n  const opacity = useTransform(progress, range, [0, 1])\n\n  return (\n    <span className=\"relative mr-2 inline-block\">\n      <span className=\"text-foreground/10\">{children}</span>\n      <motion.span\n        className=\"text-foreground absolute inset-0\"\n        style={{ opacity }}\n      >\n        {children}\n      </motion.span>\n    </span>\n  )\n}\n",
      "type": "registry:ui",
      "target": "components/ottoui/ui/ScrollRevealParagraph.tsx"
    }
  ]
}