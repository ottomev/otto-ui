{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "phototab-demo",
  "type": "registry:block",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "examples/PhototabDemo.tsx",
      "content": "import { Dog, Map as MapIcon, User } from \"lucide-react\"\n\nimport Phototab, { PhototabTab } from \"@/components/ottoui/ui/Phototab\"\n\n// Placeholder images (replace with your own if available)\nconst Images = [\n  \"https://images.unsplash.com/photo-1505937059382-aab581fd88c8?=webp&fit=crop&w=800&fit=max\",\n  \"https://images.unsplash.com/photo-1705054476413-4aed25209459?=webp&fit=crop&w=800&fit=max\",\n  \"https://images.unsplash.com/photo-1591282063405-1752516fd16e?=webp&fit=crop&w=800&fit=max\",\n]\n\nconst tabs: PhototabTab[] = [\n  {\n    name: \"one\",\n    image: Images[0],\n    icon: <User />,\n  },\n  {\n    name: \"two\",\n    image: Images[1],\n    icon: <Dog />,\n  },\n  {\n    name: \"three\",\n    image: Images[2],\n    icon: <MapIcon />,\n  },\n]\n\nexport default function PhototabDemo() {\n  return (\n    <div className=\"mx-auto max-w-md\">\n      <Phototab tabs={tabs} defaultTab=\"one\" />\n    </div>\n  )\n}\n",
      "type": "registry:block",
      "target": "components/ottoui/examples/PhototabDemo.tsx"
    },
    {
      "path": "ottoui/phototab.tsx",
      "content": "\"use client\"\n\nimport { useLayoutEffect, useRef, useState } from \"react\"\nimport * as Tabs from \"@radix-ui/react-tabs\"\nimport { AnimatePresence, motion } from \"motion/react\"\n\n/**\n * Tab definition for Phototab\n */\nexport interface PhototabTab {\n  /** Tab label */\n  name: string\n  /** Tab icon (ReactNode) */\n  icon: React.ReactNode\n  /** Tab image (string: URL or import) */\n  image: string\n}\n\nexport interface PhototabProps {\n  /** Array of tabs to display */\n  tabs: PhototabTab[]\n  /** Default selected tab name */\n  defaultTab?: string\n  /** Class name for root */\n  className?: string\n  /** Class name for tab list */\n  tabListClassName?: string\n  /** Class name for tab trigger */\n  tabTriggerClassName?: string\n  /** Class name for image */\n  imageClassName?: string\n}\n\nexport default function Phototab({\n  tabs,\n  defaultTab,\n  className = \"\",\n  tabListClassName = \"\",\n  tabTriggerClassName = \"\",\n  imageClassName = \"\",\n}: PhototabProps) {\n  const [hoveredIndex, setHoveredIndex] = useState<number | null>(null)\n  const [bgStyle, setBgStyle] = useState<{\n    left: number\n    top: number\n    width: number\n    height: number\n  } | null>(null)\n  const triggersRef = useRef<(HTMLButtonElement | null)[]>([])\n  const listRef = useRef<HTMLDivElement | null>(null)\n\n  useLayoutEffect(() => {\n    if (\n      hoveredIndex !== null &&\n      triggersRef.current[hoveredIndex] &&\n      listRef.current\n    ) {\n      const trigger = triggersRef.current[hoveredIndex]\n      const listRect = listRef.current.getBoundingClientRect()\n      const triggerRect = trigger!.getBoundingClientRect()\n      setBgStyle({\n        left: triggerRect.left - listRect.left,\n        top: triggerRect.top - listRect.top,\n        width: triggerRect.width,\n        height: triggerRect.height,\n      })\n    } else {\n      setBgStyle(null)\n    }\n  }, [hoveredIndex])\n\n  return (\n    <Tabs.Root\n      className={`group relative h-100 w-100 overflow-hidden ${className}`}\n      defaultValue={defaultTab || (tabs[0]?.name ?? \"\")}\n      orientation=\"horizontal\"\n    >\n      <Tabs.List\n        ref={listRef}\n        aria-label=\"Phototab Tabs\"\n        className={`hover:text-foreground bg-primary/40 ring-border/70 absolute right-0 bottom-2 left-0 mx-auto flex w-40 -translate-y-10 flex-row items-center justify-between rounded-full px-3 py-2 text-sm font-medium ring backdrop-blur-sm transition md:translate-y-20 md:group-hover:-translate-y-1/2 ${tabListClassName}`}\n        style={{ pointerEvents: \"auto\" }}\n      >\n        <AnimatePresence>\n          {bgStyle && (\n            <motion.span\n              className=\"bg-primary absolute z-0 rounded-full transition-colors\"\n              layoutId=\"hoverBackground\"\n              initial={{ opacity: 0 }}\n              animate={{\n                opacity: 1,\n                left: bgStyle.left,\n                top: bgStyle.top,\n                width: bgStyle.width,\n                height: bgStyle.height,\n              }}\n              exit={{ opacity: 0 }}\n              transition={{ type: \"spring\", stiffness: 400, damping: 40 }}\n              style={{ position: \"absolute\" }}\n            />\n          )}\n        </AnimatePresence>\n        {tabs.map((tab, index) => (\n          <Tabs.Trigger\n            aria-label={tab.name}\n            className={`data-[state='active']:bg-background relative z-10 rounded-full p-2 ${tabTriggerClassName}`}\n            key={tab.name}\n            ref={(el) => {\n              triggersRef.current[index] = el\n            }}\n            onMouseEnter={() => setHoveredIndex(index)}\n            onMouseLeave={() => setHoveredIndex(null)}\n            value={tab.name}\n          >\n            <span className=\"relative z-10 rounded-full focus:outline-none\">\n              {tab.icon}\n              <span className=\"sr-only\">{tab.name}</span>\n            </span>\n          </Tabs.Trigger>\n        ))}\n      </Tabs.List>\n      {tabs.map((tab) => (\n        <Tabs.Content key={tab.name} value={tab.name} className=\"h-full w-full\">\n          <img\n            alt={tab.name}\n            className={`bg-primary h-full w-full rounded-2xl object-cover ${imageClassName}`}\n            src={tab.image}\n            width={400}\n            height={400}\n            loading=\"lazy\"\n          />\n        </Tabs.Content>\n      ))}\n    </Tabs.Root>\n  )\n}\n",
      "type": "registry:ui",
      "target": "components/ottoui/ui/phototab.tsx"
    }
  ],
  "registryDependencies": [
    "@ottoui/phototab"
  ]
}