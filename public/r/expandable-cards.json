{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "expandable-cards",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "files": [
    {
      "path": "ottoui/ExpandableCards.tsx",
      "content": "\"use client\"\n\nimport { useEffect, useRef, useState } from \"react\"\nimport { Play } from \"lucide-react\"\nimport { AnimatePresence, motion } from \"motion/react\"\n\nexport interface Card {\n  id: number\n  title: string\n  image: string\n  content: string\n  author?: {\n    name: string\n    role: string\n    image: string\n  }\n}\n\nconst dreams =\n  \"https://images.unsplash.com/photo-1536893827774-411e1dc7c902?=jpg&fit=crop&w=400&q=80&fit=max\"\nconst fashion =\n  \"https://images.unsplash.com/photo-1515886657613-9f3515b0c78f?=jpg&fit=crop&w=400&q=80&fit=max\"\nconst galleryart =\n  \"https://images.unsplash.com/photo-1522878308970-972ec5eedc0d?=jpg&fit=crop&w=400&q=80&fit=max\"\nconst summer =\n  \"https://images.unsplash.com/photo-1572246538688-3f326dca3951?=jpg&fit=crop&w=400&q=80&fit=max\"\n\nconst defaultCards: Card[] = [\n  {\n    id: 1,\n    title: \"Summer Opening\",\n    image: summer,\n    content:\n      \"Join us for the Summer Opening event, where we celebrate the start of a vibrant season filled with art and culture.\",\n    author: {\n      name: \"Zé Manuel\",\n      role: \"Fundador, Summer Opening\",\n      image: \"https://github.com/educlopez.png\",\n    },\n  },\n  {\n    id: 2,\n    title: \"Fashion\",\n    image: fashion,\n    content:\n      \"Explore the latest trends in fashion at our exclusive showcase, featuring renowned designers and unique styles.\",\n    author: {\n      name: \"Maria Silva\",\n      role: \"Fashion Curator\",\n      image: \"https://github.com/educlopez.png\",\n    },\n  },\n  {\n    id: 3,\n    title: \"Gallery Art\",\n    image: galleryart,\n    content:\n      \"Immerse yourself in the world of art at our gallery, showcasing stunning pieces from emerging and established artists.\",\n    author: {\n      name: \"João Santos\",\n      role: \"Gallery Director\",\n      image: \"https://github.com/educlopez.png\",\n    },\n  },\n  {\n    id: 4,\n    title: \"Dreams\",\n    image: dreams,\n    content:\n      \"Join us on a journey through dreams, exploring the subconscious and the art of dreaming.\",\n    author: {\n      name: \"Ana Rodrigues\",\n      role: \"Dream Interpreter\",\n      image: \"https://github.com/educlopez.png\",\n    },\n  },\n]\n\nconst smoothEasing = [0.4, 0.0, 0.2, 1]\n\nexport interface ExpandableCardsProps {\n  cards?: Card[]\n  selectedCard?: number | null\n  onSelect?: (id: number | null) => void\n  className?: string\n  cardClassName?: string\n}\n\nexport default function ExpandableCards({\n  cards = defaultCards,\n  selectedCard: controlledSelected,\n  onSelect,\n  className = \"\",\n  cardClassName = \"\",\n}: ExpandableCardsProps) {\n  const [internalSelected, setInternalSelected] = useState<number | null>(null)\n  const scrollRef = useRef<HTMLDivElement>(null)\n\n  const selectedCard =\n    controlledSelected !== undefined ? controlledSelected : internalSelected\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      const scrollWidth = scrollRef.current.scrollWidth\n      const clientWidth = scrollRef.current.clientWidth\n      scrollRef.current.scrollLeft = (scrollWidth - clientWidth) / 2\n    }\n  }, [])\n\n  const handleCardClick = (id: number) => {\n    if (selectedCard === id) {\n      if (onSelect) onSelect(null)\n      else setInternalSelected(null)\n    } else {\n      if (onSelect) onSelect(id)\n      else setInternalSelected(id)\n      // Center the clicked card in view\n      const cardElement = document.querySelector(`[data-card-id=\"${id}\"]`)\n      if (cardElement) {\n        cardElement.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"nearest\",\n          inline: \"center\",\n        })\n      }\n    }\n  }\n\n  return (\n    <div\n      className={`flex w-full flex-col gap-4 overflow-scroll p-4 ${className}`}\n    >\n      <div\n        ref={scrollRef}\n        className=\"scrollbar-hide mx-auto flex overflow-x-auto pt-4 pb-8\"\n        style={{\n          scrollSnapType: \"x mandatory\",\n          scrollPaddingLeft: \"20%\",\n        }}\n      >\n        {cards.map((card) => (\n          <motion.div\n            key={card.id}\n            layout\n            data-card-id={card.id}\n            className={`bg-background relative mr-4 h-[300px] flex-shrink-0 cursor-pointer overflow-hidden rounded-2xl border shadow-lg ${cardClassName}`}\n            style={{\n              scrollSnapAlign: \"start\",\n            }}\n            animate={{\n              width: selectedCard === card.id ? \"500px\" : \"200px\",\n            }}\n            transition={{\n              duration: 0.5,\n              ease: smoothEasing,\n            }}\n            onClick={() => handleCardClick(card.id)}\n          >\n            <div className=\"relative h-full w-[200px]\">\n              <img\n                src={card.image || \"/placeholder.svg\"}\n                alt={card.title}\n                width={200}\n                height={300}\n                className=\"h-full w-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-black/20\" />\n              <div className=\"absolute inset-0 flex flex-col justify-between p-6 text-white\">\n                <h2 className=\"text-2xl font-bold\">{card.title}</h2>\n                <div className=\"flex items-center gap-2\">\n                  <button\n                    aria-label=\"Play video\"\n                    className=\"bg-background/30 flex h-12 w-12 items-center justify-center rounded-full backdrop-blur-sm transition-transform hover:scale-110\"\n                  >\n                    <Play className=\"h-6 w-6 text-white\" />\n                  </button>\n                  <span className=\"text-sm font-medium\">Play video</span>\n                </div>\n              </div>\n            </div>\n            <AnimatePresence mode=\"popLayout\">\n              {selectedCard === card.id && (\n                <motion.div\n                  initial={{ width: 0, opacity: 0, filter: \"blur(5px)\" }}\n                  animate={{ width: \"300px\", opacity: 1, filter: \"blur(0px)\" }}\n                  exit={{ width: 0, opacity: 0, filter: \"blur(5px)\" }}\n                  transition={{\n                    duration: 0.5,\n                    ease: smoothEasing,\n                    opacity: { duration: 0.3, delay: 0.2 },\n                  }}\n                  className=\"bg-background absolute top-0 right-0 h-full\"\n                >\n                  <motion.div\n                    className=\"flex h-full flex-col justify-between p-8\"\n                    initial={{ opacity: 0, x: 20, filter: \"blur(5px)\" }}\n                    animate={{ opacity: 1, x: 0, filter: \"blur(0px)\" }}\n                    exit={{ opacity: 0, x: 20, filter: \"blur(5px)\" }}\n                    transition={{ delay: 0.4, duration: 0.3 }}\n                  >\n                    <p className=\"text-primary-foreground text-sm\">\n                      {card.content}\n                    </p>\n                    {card.author && (\n                      <div className=\"mt-4 flex items-center gap-3\">\n                        <div className=\"bg-primary h-12 w-12 overflow-hidden rounded-full border\">\n                          <img\n                            src={card.author.image}\n                            alt={card.author.name}\n                            width={48}\n                            height={48}\n                            className=\"h-full w-full object-cover\"\n                          />\n                        </div>\n                        <div>\n                          <p className=\"text-foreground font-semibold\">\n                            {card.author.name}\n                          </p>\n                          <p className=\"text-primary-foreground text-xs\">\n                            {card.author.role}\n                          </p>\n                        </div>\n                      </div>\n                    )}\n                  </motion.div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:ui",
      "target": "components/ottoui/ui/ExpandableCards.tsx"
    }
  ]
}