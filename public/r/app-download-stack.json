{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "app-download-stack",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "files": [
    {
      "path": "ottoui/AppDownloadStack.tsx",
      "content": "\"use client\"\n\nimport { useCallback, useMemo, useState } from \"react\"\nimport { ChevronDown } from \"lucide-react\"\nimport { AnimatePresence, motion, useAnimation } from \"motion/react\"\n\nexport interface AppData {\n  id: number\n  name: string\n  icon: string\n}\n\nexport interface AppDownloadStackProps {\n  apps?: AppData[]\n  title?: string\n  selectedApps?: number[]\n  onChange?: (selected: number[]) => void\n  onDownload?: (selected: number[]) => void\n  isExpanded?: boolean\n  onExpandChange?: (expanded: boolean) => void\n  className?: string\n}\n\nconst defaultApps: AppData[] = [\n  {\n    id: 1,\n    name: \"GitHub\",\n    icon: \"https://parsefiles.back4app.com/JPaQcFfEEQ1ePBxbf6wvzkPMEqKYHhPYv8boI1Rc/9c9721583ecba33e59ebcebdca2248fd_Mmr12FRh5V.png\",\n  },\n  {\n    id: 2,\n    name: \"Canary\",\n    icon: \"https://parsefiles.back4app.com/JPaQcFfEEQ1ePBxbf6wvzkPMEqKYHhPYv8boI1Rc/b47f43e02f04563447fa90d4ff6c8943_9KzW5GTggQ.png\",\n  },\n  {\n    id: 3,\n    name: \"Figma\",\n    icon: \"https://parsefiles.back4app.com/JPaQcFfEEQ1ePBxbf6wvzkPMEqKYHhPYv8boI1Rc/f0b9cdefa67b57eeb080278c2f6984cc_sCqUJBg6Qq.png\",\n  },\n  {\n    id: 4,\n    name: \"Arc\",\n    icon: \"https://parsefiles.back4app.com/JPaQcFfEEQ1ePBxbf6wvzkPMEqKYHhPYv8boI1Rc/178c7b02003c933e6b5afe98bbee595b_low_res_Arc_Browser.png\",\n  },\n]\n\nexport default function AppDownloadStack({\n  apps = defaultApps,\n  title = \"Starter Mac\",\n  selectedApps: controlledSelected,\n  onChange,\n  onDownload,\n  isExpanded: controlledExpanded,\n  onExpandChange,\n  className = \"\",\n}: AppDownloadStackProps) {\n  const [internalExpanded, setInternalExpanded] = useState(false)\n  const [internalSelected, setInternalSelected] = useState<number[]>([])\n  const [isDownloading, setIsDownloading] = useState(false)\n  const [downloadComplete, setDownloadComplete] = useState(false)\n  const shineControls = useAnimation()\n\n  const isExpanded =\n    controlledExpanded !== undefined ? controlledExpanded : internalExpanded\n  const selected = controlledSelected ?? internalSelected\n\n  const setExpanded = (val: boolean) => {\n    if (onExpandChange) onExpandChange(val)\n    else setInternalExpanded(val)\n  }\n\n  const toggleApp = useCallback(\n    (id: number) => {\n      const newSelected = selected.includes(id)\n        ? selected.filter((appId) => appId !== id)\n        : [...selected, id]\n      if (onChange) onChange(newSelected)\n      else setInternalSelected(newSelected)\n    },\n    [selected, onChange]\n  )\n\n  const handleDownload = useCallback(() => {\n    setIsDownloading(true)\n    if (onDownload) onDownload(selected)\n    shineControls.start({\n      x: [\"0%\", \"100%\"],\n      transition: { duration: 1, repeat: Infinity, ease: \"linear\" },\n    })\n    setTimeout(() => {\n      shineControls.stop()\n      setDownloadComplete(true)\n      setTimeout(() => {\n        setExpanded(false)\n        if (onChange) onChange([])\n        else setInternalSelected([])\n        setIsDownloading(false)\n        setDownloadComplete(false)\n      }, 1000)\n    }, 3000)\n  }, [shineControls, selected, onDownload, onChange])\n\n  const stackVariants = useMemo(\n    () => ({\n      initial: (i: number) => ({\n        rotate: i % 2 === 0 ? -8 * (i + 1) : 8 * (i + 1),\n        x: i % 2 === 0 ? -3 * (i + 1) : 3 * (i + 1),\n        y: 0,\n        zIndex: 40 - i * 10,\n      }),\n      hover: (i: number) => ({\n        rotate: 0,\n        x: i * 10,\n        y: -i * 10,\n        zIndex: 40 - i * 10,\n      }),\n      float: (i: number) => ({\n        y: [0, -5, 0],\n        transition: {\n          y: {\n            repeat: Infinity,\n            duration: 2,\n            ease: \"easeInOut\",\n            delay: i * 0.2,\n          },\n        },\n      }),\n    }),\n    []\n  )\n\n  return (\n    <div\n      className={`flex h-auto flex-col items-center justify-center ${className}`}\n    >\n      <motion.div layout className=\"flex flex-col items-center justify-center\">\n        <AnimatePresence mode=\"wait\">\n          {!isExpanded && !isDownloading && (\n            <motion.button\n              key=\"initial-stack\"\n              className=\"group relative isolate flex h-16 w-16 cursor-pointer items-center justify-center\"\n              onClick={() => setExpanded(true)}\n              whileHover=\"hover\"\n              layout\n              aria-label=\"Expand app selection\"\n            >\n              {apps.map((app, index) => (\n                <motion.img\n                  key={app.id}\n                  layoutId={`app-icon-${app.id}`}\n                  src={app.icon}\n                  width={64}\n                  height={64}\n                  alt={`${app.name} Logo`}\n                  className=\"absolute inset-0 rounded-xl border-none\"\n                  custom={index}\n                  variants={stackVariants}\n                  initial=\"initial\"\n                  animate={[\"initial\", \"float\"]}\n                  whileHover=\"hover\"\n                  transition={{ duration: 0.3 }}\n                />\n              ))}\n            </motion.button>\n          )}\n\n          {isExpanded && !isDownloading && (\n            <motion.div\n              className=\"flex flex-col items-center gap-2\"\n              key=\"app-selector\"\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.8 }}\n              layout\n            >\n              <button\n                className=\"flex w-full cursor-pointer items-center justify-between px-0.5\"\n                onClick={() => setExpanded(false)}\n              >\n                <p className=\"my-0 leading-0 font-medium\">{title}</p>\n                <div className=\"flex items-center gap-1\">\n                  <p className=\"my-0 leading-0 font-medium\">\n                    {selected.length}\n                  </p>\n                  <ChevronDown size={16} className=\"text-mauve-11\" />\n                </div>\n              </button>\n              <motion.ul className=\"grid grid-cols-2 gap-3\">\n                {apps.map((app, index) => (\n                  <motion.li\n                    key={app.id}\n                    className=\"relative flex h-[80px] w-[80px]\"\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ delay: index * 0.1 }}\n                  >\n                    <div\n                      className={`pointer-events-none absolute top-2 right-2 flex h-4 w-4 items-center justify-center rounded-full border border-solid ${\n                        selected.includes(app.id)\n                          ? \"border-blue-500 bg-blue-500\"\n                          : \"border-white/60\"\n                      }`}\n                    >\n                      {selected.includes(app.id) && (\n                        <motion.svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"white\"\n                          strokeWidth=\"2\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"z-1 h-3 w-3\"\n                          initial={{ pathLength: 0 }}\n                          animate={{ pathLength: 1 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <motion.path d=\"M5 13l4 4L19 7\" />\n                        </motion.svg>\n                      )}\n                    </div>\n                    <button\n                      className={`group bg-background/80 flex h-full w-full flex-col items-center justify-center gap-1 rounded-xl border-2 border-transparent p-2 transition-all duration-200 hover:border-blue-500 ${\n                        selected.includes(app.id)\n                          ? \"border-blue-500 bg-blue-500/10\"\n                          : \"\"\n                      }`}\n                      onClick={() => toggleApp(app.id)}\n                    >\n                      <img\n                        src={app.icon}\n                        alt={app.name}\n                        width={40}\n                        height={40}\n                        className=\"rounded-lg\"\n                      />\n                      <span className=\"text-foreground text-xs font-medium\">\n                        {app.name}\n                      </span>\n                    </button>\n                  </motion.li>\n                ))}\n              </motion.ul>\n              <button\n                className=\"mt-4 w-full rounded-lg bg-blue-500 px-4 py-2 font-semibold text-white shadow transition hover:bg-blue-600 disabled:opacity-50\"\n                onClick={handleDownload}\n                disabled={selected.length === 0}\n              >\n                Download Selected\n              </button>\n            </motion.div>\n          )}\n\n          {isDownloading && (\n            <motion.div\n              key=\"downloading\"\n              className=\"flex flex-col items-center gap-4\"\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.8 }}\n              layout\n            >\n              <div className=\"relative flex h-16 w-16 items-center justify-center\">\n                <motion.div\n                  className=\"absolute inset-0 rounded-xl bg-blue-500/20\"\n                  animate={shineControls}\n                  style={{ x: 0 }}\n                />\n                {apps.map((app, index) => (\n                  <motion.img\n                    key={app.id}\n                    layoutId={`app-icon-${app.id}`}\n                    src={app.icon}\n                    width={64}\n                    height={64}\n                    alt={`${app.name} Logo`}\n                    className=\"absolute inset-0 rounded-xl border-none\"\n                    custom={index}\n                    variants={stackVariants}\n                    initial=\"initial\"\n                    animate={[\"initial\", \"float\"]}\n                    transition={{ duration: 0.3 }}\n                  />\n                ))}\n              </div>\n              <span className=\"font-semibold text-blue-500\">\n                Downloading...\n              </span>\n            </motion.div>\n          )}\n\n          {downloadComplete && (\n            <motion.div\n              key=\"download-complete\"\n              className=\"flex flex-col items-center gap-4\"\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.8 }}\n              layout\n            >\n              <span className=\"font-semibold text-green-500\">\n                Download Complete!\n              </span>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </motion.div>\n    </div>\n  )\n}\n",
      "type": "registry:ui",
      "target": "components/ottoui/ui/AppDownloadStack.tsx"
    }
  ]
}